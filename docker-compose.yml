version: "3.9"

services:
  db:
    image: postgres:16
    container_name: familytree-db
    environment:
      POSTGRES_DB: familytree
      POSTGRES_USER: family
      POSTGRES_PASSWORD: family
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U family -d familytree"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: familytree-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass yourpassword
    volumes:
      - redis_data:/data

  app:
    build:
      context: .
      dockerfile: application/Dockerfile
    container_name: familytree-api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/familytree
      SPRING_DATASOURCE_USERNAME: family
      SPRING_DATASOURCE_PASSWORD: family
      # For local/dev: create/update schema automatically
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      # Optional extra JVM opts
      JAVA_OPTS: -Xms256m -Xmx512m
      # Redis connection (overridable via .env)
      SPRING_DATA_REDIS_HOST: ${REDIS_HOST:redis}
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD:yourpassword}
      AUTH_TELEGRAM_BOT_USERNAME: ${BOT_USERNAME:my_family_bot}
      AUTH_TELEGRAM_SESSION_TTL_SECONDS: ${TELEGRAM_SESSION_TTL:300}
      AUTH_TELEGRAM_WEBHOOK_SECRET: ${TELEGRAM_WEBHOOK_SECRET:}
      AUTH_TELEGRAM_BOT_TOKEN: ${BOT_TOKEN:}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:local}
    ports:
      - "8080:8080"
    env_file:
      - .env

volumes:
  pgdata: {}
  redis_data:
